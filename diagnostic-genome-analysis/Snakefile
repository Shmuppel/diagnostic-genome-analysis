"""
Diagnostic Genome Analysis - Snakemake Pipeline

Preperation rules:
    -Retrieving remote genome (code provided, but currently offline)
    -Retrieving remote Annovar databases
	-BWA Index

Tools supported:
	-FastQC
	-Trimmomatic
	-BWA MEM Mapping
	-Samtools sort
	-Markduplicates
	-Bamtools split
	-MpileUp
	-VarScan 2
	-Annovar
"""

# CONFIG
configfile: "config.yaml"

# PIPELINE RULES.
#include: "rules/preperation/get_remote_genome.snakefile"
include: "rules/preperation/get_remote_annovar_dbs.snakefile"
include: "rules/preperation/bwa_index.snakefile"
include: "rules/fastqc.snakefile"
include: "rules/trimmomatic.snakefile"
include: "rules/bwa_mem.snakefile"
include: "rules/samtools_sort.snakefile"
include: "rules/bamtools_split.snakefile"
include: "rules/marked_duplicates.snakefile"
include: "rules/mpileup.snakefile"
include: "rules/varscan.snakefile"
include: "rules/concat_vcf.snakefile"
include: "rules/annovar.snakefile"

rule all:
	input:
		expand("runs/{sample}/results/results_notebook.html",
			   sample=config["samples"])

rule jupyter_to_html:
	input:
		"runs/{sample}/results/results_notebook.ipynb"
	output:
		"runs/{sample}/results/results_notebook.html"
	shell:
		"jupyter nbconvert --execute --to html {input}"

rule jupyter_report:
	input:
		expand("runs/{{sample}}/results/{{sample}}_{num}_fastqc.html",
			   num = ["R1", "R2"]),
		expand("runs/{{sample}}/results/{{sample}}.{genome_build}_multianno.txt",
			   genome_build = config["genome_build"])
	output:
		"runs/{sample}/results/results_notebook.ipynb"
	log:
		notebook = "runs/{sample}/results/results_notebook.ipynb"
	notebook:
		config["notebook"]


